
 package ${package.Controller};

 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
 import org.springframework.web.bind.annotation.*;
 import javax.annotation.Resource;
 import java.util.List;

 import ${package.Service}.${table.serviceName};
 import ${package.Entity}.${entity};

 #if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

 @Resource
 private ${table.serviceName} ${table.entityPath}Service;

 //新增或者更新
 @PostMapping
 public Boolean save(@RequestBody ${entity} ${table.entityPath}){
       return  ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
 }

 //根据主键删除
 @DeleteMapping("/{id}")
 public Boolean delete(@PathVariable Integer id){return ${table.entityPath}Service.removeById(id);}

 //批量删除
 @PostMapping("/deleteBatch")
 public Boolean deleteBatch(@RequestBody List<Integer> ids){
        return ${table.entityPath}Service.removeByIds(ids);
        }

 //查询所有用户
 @GetMapping
 public List<${entity}> index(){ return ${table.entityPath}Service.list(); }

 //根据id查询
 @GetMapping("/{id}")
 public ${entity} findOne(@PathVariable Integer id){ return ${table.entityPath}Service.getById(id); }

 //分页查询
 @GetMapping("/page")
 public IPage<${entity}> findPage(@RequestParam Integer pageNum,
                             @RequestParam Integer pageSize){
        QueryWrapper<${entity}> query = new QueryWrapper<>();

        return  ${table.entityPath}Service.page(new Page<>(pageNum,pageSize));
        }

}
#end